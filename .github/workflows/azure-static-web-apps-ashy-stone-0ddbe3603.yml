name: Deploy to Azure Static Web Apps

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  COSMOS_DB_URL: ${{ secrets.COSMOS_DB_URL }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.5

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install
          npm run build

      - name: Debug frontend build
        run: |
          echo "Sprawdzam katalog frontend/dist..."
          ls -la frontend/dist || echo "Brak katalogu dist!"
          [ -d frontend/dist ] || (echo "Błąd: frontend/dist nie istnieje!" && exit 1)

      - name: Fix permissions
        run: chmod -R 755 frontend/dist

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install backend dependencies (minimalizacja rozmiaru)
        run: |
          cd backend
          pip install --upgrade pip
          sed -i '/tensorflow/d' requirements.txt  # Usunięcie TensorFlow
          sed -i '/pytest/d' requirements.txt  # Usunięcie testów
          sed -i '/flake8/d' requirements.txt  # Usunięcie lintera
          sed -i '/seaborn/d' requirements.txt  # Usunięcie bibliotek do wykresów
          pip install -r requirements.txt

      - name: Check API size before deployment
        run: du -sh backend/ || true

      - name: Clean up unnecessary files
        run: |
          cd backend
          rm -rf __pycache__ .venv .git

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "frontend/dist"
          api_location: "backend"
          output_location: "backend/"
